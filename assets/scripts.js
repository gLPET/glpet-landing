// –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–µ—Ä—Å–∏–∏ —Ñ–∞–π–ª–∞ (–¥–ª—è –æ—Ç–ª–∞–¥–∫–∏)
console.log("scripts.js loaded, version: 2025-07-18 00:12 CEST");

// –ö–∞—Å—Ç–æ–º–Ω—ã–π –∫—É—Ä—Å–æ—Ä —Å —ç–º–æ–¥–∑–∏
const trail = document.getElementById('cursor-trail');
let trailParticles = [];

if (trail) {
  document.addEventListener('mousemove', (e) => {
    // –°–æ–∑–¥–∞–µ–º –≤–µ–¥—É—â–∏–π —ç–º–æ–¥–∑–∏ –∫–∞–∫ –æ—Å–Ω–æ–≤–Ω–æ–π –∫—É—Ä—Å–æ—Ä
    const leadEmoji = document.createElement('div');
    leadEmoji.textContent = 'üòπ';
    leadEmoji.style.position = 'absolute';
    leadEmoji.style.left = `${e.pageX - 12}px`;
    leadEmoji.style.top = `${e.pageY - 12}px`;
    leadEmoji.style.opacity = 1;
    leadEmoji.style.transform = 'translate(-50%, -50%)';
    leadEmoji.style.pointerEvents = 'none';
    document.body.appendChild(leadEmoji);
    trailParticles.push(leadEmoji);

    // –°–æ–∑–¥–∞–µ–º —Ö–≤–æ—Å—Ç –∏–∑ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö —ç–º–æ–¥–∑–∏
    for (let i = 0; i < 5; i++) {
      const tailEmoji = document.createElement('div');
      tailEmoji.textContent = 'üòπ';
      tailEmoji.style.position = 'absolute';
      tailEmoji.style.left = `${e.pageX - 12 + i * 10}px`;
      tailEmoji.style.top = `${e.pageY - 12 + i * 10}px`;
      tailEmoji.style.opacity = 1 - (i * 0.2); // –ü–æ—Å—Ç–µ–ø–µ–Ω–Ω–æ–µ —É–º–µ–Ω—å—à–µ–Ω–∏–µ –ø—Ä–æ–∑—Ä–∞—á–Ω–æ—Å—Ç–∏
      tailEmoji.style.transform = 'translate(-50%, -50%)';
      tailEmoji.style.pointerEvents = 'none';
      document.body.appendChild(tailEmoji);
      trailParticles.push(tailEmoji);
    }

    // –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∞–Ω–∏–º–∞—Ü–∏–µ–π —Ö–≤–æ—Å—Ç–∞
    trailParticles.forEach((particle, index) => {
      setTimeout(() => {
        particle.style.transition = 'opacity 0.8s ease-out';
        particle.style.opacity = 0;
        setTimeout(() => {
          particle.remove();
          trailParticles = trailParticles.filter(p => p !== particle);
        }, 800);
      }, index * 100); // –ó–∞–¥–µ—Ä–∂–∫–∞ –¥–ª—è –ø–ª–æ—Ç–Ω–æ—Å—Ç–∏
    });

    // –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —á–∞—Å—Ç–∏—Ü –¥–æ 20 –¥–ª—è –¥–ª–∏–Ω–Ω–æ–≥–æ —Ö–≤–æ—Å—Ç–∞
    if (trailParticles.length > 20) {
      trailParticles[0].remove();
      trailParticles.shift();
    }
  });
} else {
  console.error('Cursor trail element not found');
}

// –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –≥–∞–ª–µ—Ä–µ—è —Å —Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–º –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ–º
let currentImageIndices = Array.from({ length: 9 }, () => 0);

function updateGallery() {
  const cells = document.querySelectorAll('.gallery-cell');
  if (cells.length > 0) {
    cells.forEach((cell, cellIndex) => {
      const imageContainer = cell.querySelector('.image-container');
      if (imageContainer) {
        const cellImages = imageContainer.querySelectorAll('.gallery-image');
        cellImages.forEach((img, i) => {
          img.classList.toggle('active', i === currentImageIndices[cellIndex]);
        });
      } else {
        console.error('Image container not found in cell', cellIndex);
      }
    });
    console.log('Gallery updated, current indices:', currentImageIndices);
  } else {
    console.error('No gallery cells found');
  }
}

// –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–∞—á–∞–ª—å–Ω–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è –∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ
document.addEventListener('DOMContentLoaded', () => {
  console.log('DOM fully loaded');
  updateGallery(); // –ü–æ–∫–∞–∑–∞—Ç—å –ø–µ—Ä–≤—É—é –∫–∞—Ä—Ç–∏–Ω–∫—É –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
  setInterval(() => {
    currentImageIndices = currentImageIndices.map(index => (index + 1) % 4);
    updateGallery();
  }, 3000); // –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –∫–∞–∂–¥—ã–µ 3 —Å–µ–∫—É–Ω–¥—ã
});

// –≠–º–æ–¥–∑–∏-–∑–≤–µ–∑–¥—ã —Å –º–µ–¥–ª–µ–Ω–Ω—ã–º –ø–æ—è–≤–ª–µ–Ω–∏–µ–º –∏ –±—ã—Å—Ç—Ä—ã–º –∏—Å—á–µ–∑–Ω–æ–≤–µ–Ω–∏–µ–º
const canvas = document.getElementById('emoji-background');
if (canvas && canvas.getContext) {
  const ctx = canvas.getContext('2d');
  canvas.width = window.innerWidth;
  canvas.height = window.innerHeight;

  const emojis = ["üò∫", "üê∂", "üê±", "üòª", "üêØ", "üê∫", "üê≠", "üêπ", "üê∞", "ü¶ä", "üêª", "üêº", "üê®", "üê∑", "üêΩ", "üêÆ", "üê¥", "üêë", "üêè", "üêê", "üêò", "üêµ", "üêí", "ü¶ç", "üêç", "üê¢", "üê∏", "ü¶é", "üêô", "üê≥", "üê¨", "üêü", "üê†", "üê°", "ü¶à", "üêù", "üêû", "üï∑Ô∏è", "ü¶Ç", "ü¶ó", "üêú", "ü¶ã", "üêå", "üêä", "üêÖ", "ü¶í", "ü¶ì", "ü¶å", "üê™", "üê´", "ü¶ò", "üêò", "ü¶è", "ü¶õ", "üêÉ", "üêÇ", "üêÑ", "üêé", "üêñ", "üêè", "üêë", "üêï", "üê©", "üêà", "üêÖ", "üêÜ", "ü¶á", "üê¶", "ü¶â", "ü¶Ö", "ü¶Ü", "ü¶¢", "ü¶©", "üïäÔ∏è", "üêß", "ü¶É", "ü¶ö"];
  let particles = [];

  function EmojiParticle() {
    this.x = Math.random() * canvas.width;
    this.y = Math.random() * canvas.height;
    this.emoji = emojis[Math.floor(Math.random() * emojis.length)];
    this.life = 200 + Math.random() * 400;
    this.size = 10 + Math.random() * 20;
    this.alpha = 0;
    this.growth = 0.02 + Math.random() * 0.03;
  }

  function animate() {
    if (ctx) {
      ctx.clearRect(0, 0, canvas.width, canvas.height);
      particles = particles.filter(p => p.life > 0);

      if (Math.random() < 0.07) particles.push(new EmojiParticle());

      particles.forEach(p => {
        if (p.alpha < 1 && p.life > 150) p.alpha += 0.003;
        else if (p.life < 50) p.alpha -= 0.02;
        p.size += p.growth;
        if (p.size > 30) p.growth = -p.growth;
        p.life--;
        ctx.globalAlpha = p.alpha;
        ctx.font = `${p.size}px serif`;
        ctx.fillText(p.emoji, p.x, p.y);
      });

      requestAnimationFrame(animate);
    } else {
      console.error('Canvas context not available');
    }
  }
  animate();
} else {
  console.error('Canvas element not found or not supported');
}

window.addEventListener('resize', () => {
  if (canvas) {
    canvas.width = window.innerWidth;
    canvas.height = window.innerHeight;
  }
});
