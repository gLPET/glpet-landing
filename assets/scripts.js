// –ö–∞—Å—Ç–æ–º–Ω—ã–π –∫—É—Ä—Å–æ—Ä —Å —ç–º–æ–¥–∑–∏
const trail = document.getElementById('cursor-trail');
let trailParticles = [];

document.addEventListener('mousemove', (e) => {
  const emoji = document.createElement('div');
  emoji.textContent = 'üòπ';
  emoji.style.position = 'absolute';
  emoji.style.left = `${e.pageX - 12}px`;
  emoji.style.top = `${e.pageY - 12}px`;
  emoji.style.opacity = 1;
  emoji.style.transition = 'opacity 1.2s ease-out, transform 0.4s ease-out';
  emoji.style.transform = 'translate(-50%, -50%)';
  document.body.appendChild(emoji);
  trailParticles.push(emoji);

  setTimeout(() => {
    emoji.style.opacity = 0;
    setTimeout(() => emoji.remove(), 1200);
    trailParticles = trailParticles.filter(p => p !== emoji);
  }, 2000);

  if (trailParticles.length > 12) {
    trailParticles[0].remove();
    trailParticles.shift();
  }
});

// –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –≥–∞–ª–µ—Ä–µ—è —Å –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ–º –∫–∞–∂–¥—ã–µ 3 —Å–µ–∫—É–Ω–¥—ã
let currentImageIndex = 0;

function updateGallery() {
  const cells = document.querySelectorAll('.gallery-cell');
  cells.forEach(cell => {
    const cellImages = cell.querySelectorAll('.gallery-image');
    cellImages.forEach((img, i) => {
      img.classList.toggle('active', i === currentImageIndex);
    });
  });
}

setInterval(() => {
  currentImageIndex = (currentImageIndex + 1) % 4;
  updateGallery();
}, 3000); // –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –∫–∞–∂–¥—ã–µ 3 —Å–µ–∫—É–Ω–¥—ã

// –≠–º–æ–¥–∑–∏-–∑–≤–µ–∑–¥—ã —Å –º–µ–¥–ª–µ–Ω–Ω—ã–º –ø–æ—è–≤–ª–µ–Ω–∏–µ–º –∏ –±—ã—Å—Ç—Ä—ã–º –∏—Å—á–µ–∑–Ω–æ–≤–µ–Ω–∏–µ–º
const canvas = document.getElementById('emoji-background');
const ctx = canvas.getContext('2d');
canvas.width = window.innerWidth;
canvas.height = window.innerHeight;

const emojis = ["üò∫", "üê∂", "üê±", "üòª", "üêØ", "üê∫", "üê≠", "üêπ", "üê∞", "ü¶ä", "üêª", "üêº", "üê®", "üê∑", "üêΩ", "üêÆ", "üê¥", "üêë", "üêè", "üêê", "üêò", "üêµ", "üêí", "ü¶ç", "üêç", "üê¢", "üê∏", "ü¶é", "üêô", "üê≥", "üê¨", "üêü", "üê†", "üê°", "ü¶à", "üêù", "üêû", "üï∑Ô∏è", "ü¶Ç", "ü¶ó", "üêú", "ü¶ã", "üêå", "üêä", "üêÖ", "ü¶í", "ü¶ì", "ü¶å", "üê™", "üê´", "ü¶ò", "üêò", "ü¶è", "ü¶õ", "üêÉ", "üêÇ", "üêÑ", "üêé", "üêñ", "üêè", "üêë", "üêï", "üê©", "üêà", "üêÖ", "üêÜ", "ü¶á", "üê¶", "ü¶â", "ü¶Ö", "ü¶Ü", "ü¶¢", "ü¶©", "üïäÔ∏è", "üêß", "ü¶É", "ü¶ö"];
let particles = [];

function EmojiParticle() {
  this.x = Math.random() * canvas.width;
  this.y = Math.random() * canvas.height;
  this.emoji = emojis[Math.floor(Math.random() * emojis.length)];
  this.life = 200 + Math.random() * 400;
  this.size = 10 + Math.random() * 20;
  this.alpha = 0;
  this.growth = 0.02 + Math.random() * 0.03;
}

function animate() {
  ctx.clearRect(0, 0, canvas.width, canvas.height);
  particles = particles.filter(p => p.life > 0);

  if (Math.random() < 0.07) particles.push(new EmojiParticle());

  particles.forEach(p => {
    if (p.alpha < 1 && p.life > 150) p.alpha += 0.003; // –ú–µ–¥–ª–µ–Ω–Ω–æ–µ –ø–æ—è–≤–ª–µ–Ω–∏–µ
    else if (p.life < 50) p.alpha -= 0.02; // –ë—ã—Å—Ç—Ä–æ–µ –∏—Å—á–µ–∑–Ω–æ–≤–µ–Ω–∏–µ
    p.size += p.growth;
    if (p.size > 30) p.growth = -p.growth;
    p.life--;
    ctx.globalAlpha = p.alpha;
    ctx.font = `${p.size}px serif`;
    ctx.fillText(p.emoji, p.x, p.y);
  });

  requestAnimationFrame(animate);
}
animate();

window.addEventListener('resize', () => {
  canvas.width = window.innerWidth;
  canvas.height = window.innerHeight;
});
